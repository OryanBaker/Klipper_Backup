[server]
host: 0.0.0.0
port: 7125
# The maximum size allowed for a file upload (in MiB).  Default 1024 MiB
max_upload_size: 1024
# Path to klippy Unix Domain Socket
klippy_uds_address: ~/printer_data/comms/klippy.sock

[file_manager]
# post processing for object cancel. Not recommended for low resource SBCs such as a Pi Zero. Default False
enable_object_processing: True

[authorization]
cors_domains:
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    http://*.local
    http://*.lan
    *:7136
    *.local:7136
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128

# enables partial support of Octoprint API
[octoprint_compat]

# enables moonraker to track and store print history.
[history]

# this enables moonraker announcements for mainsail
[announcements]
subscriptions:
    mainsail

[power Printer_ON]
type: gpio
pin: gpio21
off_when_shutdown: false #true
on_when_job_queued: True
locked_while_printing: True
restart_klipper_when_powered: true
restart_delay: 1
initial_state: off
timer: 0.05

# this enables moonraker's update manager
[update_manager]
refresh_interval: 168
enable_auto_refresh: True
channel: beta

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

### moonraker-timelapse
### Don't forget to include timelapse.cfg to your printer.cfg
### Uncomment to enable moonraker-timelapse


[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[timelapse]
##   Directory where the generated video will be saved
output_path: ~/timelapse/
##   Directory where ffmpeg is installed
ffmpeg_binary_path: /usr/bin/ffmpeg

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

# Telegram Bot update manager
#[update_manager moonraker-telegram-bot]
#type: git_repo
#path: ~/moonraker-telegram-bot
#origin: https://github.com/nlef/moonraker-telegram-bot.git
#env: ~/moonraker-telegram-bot-env/bin/python
#requirements: scripts/requirements.txt
#install_script: scripts/install.sh

# MobileRaker update manager
[update_manager mobileraker]
type: git_repo
path: /home/pi/mobileraker_companion
origin: https://github.com/Clon1998/mobileraker_companion.git
primary_branch:main
managed_services: mobileraker
env: /home/pi/mobileraker-env/bin/python
requirements: scripts/mobileraker-requirements.txt
install_script: scripts/install-mobileraker-companion.sh

# CanBoot update manager
[update_manager CanBoot]
type: git_repo
path: /home/pi/CanBoot
origin: https://github.com/Arksine/CanBoot.git
is_system_service: False

# KlipperScreen update manager
[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/KlipperScreen/KlipperScreen.git
virtualenv: ~/.KlipperScreen-env
requirements: scripts/KlipperScreen-requirements.txt
system_dependencies: scripts/system-dependencies.json
managed_services: KlipperScreen

# PrettyGCode update manager
[update_manager Pretty GCode]
type: git_repo
primary_branch: main
origin: https://github.com/Kragrathea/pgcode.git
path: ~/pgcode
is_system_service: False

# Klipper Adaptive Mesh/Purging update manager
[update_manager Klipper Adaptive Meshing Purging]
type: git_repo
channel: dev
path: ~/Klipper-Adaptive-Meshing-Purging
origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
managed_services: klipper
primary_branch: main

# Klipper TMC Autotune update manager
[update_manager Klipper TMC Autotune]
type: git_repo
channel: dev
path: ~/klipper_tmc_autotune
origin: https://github.com/andrewmcgr/klipper_tmc_autotune.git
managed_services: klipper
primary_branch: main
install_script: install.sh

[include octoeverywhere-system.cfg]

# Klipper Backup update manager
[update_manager client Klipper Github Backup]
type: git_repo
primary_branch: main
#origin: https://github.com/Staubgeborener/klipper-backup.git
origin: https://github.com/OryanBaker/Klipper_Backup.git
path: ~/klipper-backup
install_script: install.sh
is_system_service: False

# Z Calibration update manager
[update_manager Auto Z Calibration]
type: git_repo
path: ~/klipper_z_calibration
origin: https://github.com/protoloft/klipper_z_calibration.git
managed_services: klipper